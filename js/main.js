(function () {
	'use strict';

	!function () {

	  (e => {
	    let t = L.map("mapid").setView([40.657402, -73.949126], 10);
	    L.tileLayer("https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZGVwb2pla2EiLCJhIjoiY2tiOWx2eDRuMGZqMjJ4bzRndnUxcDY1NSJ9.Q4KnNwlVBSDCT1lMpucEJA", {
	      attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/">OpenStreetMap</a> contributors, <a href="https://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, Imagery Â© <a href="https://www.mapbox.com/">Mapbox</a>',
	      maxZoom: 15,
	      id: "mapbox/streets-v11",
	      tileSize: 512,
	      zoomOffset: -1,
	      opacity: 1
	    }).addTo(t);
	    L.marker([40.657402, -73.949126]).addTo(t);
	  })();

	  (() => {
	    const e = document.getElementById("circle-1"),
	          t = document.getElementById("circle-2"),
	          c = document.getElementById("circle-3"),
	          s = document.getElementById("circle-4"),
	          a = document.getElementById("circle-5"),
	          o = (document.getElementById("header"), document.getElementById("description")),
	          i = document.getElementById("commerce"),
	          r = document.getElementById("news"),
	          m = document.getElementById("footer");
	    document.addEventListener("click", l => {
	      l.target == e ? (e.classList.add("active"), c.classList.remove("active"), s.classList.remove("active"), a.classList.remove("active"), t.classList.remove("active")) : l.target == t ? (e.classList.remove("active"), c.classList.remove("active"), s.classList.remove("active"), a.classList.remove("active"), t.classList.add("active"), o.scrollIntoView({
	        block: "center",
	        behavior: "smooth"
	      })) : l.target == c ? (e.classList.remove("active"), t.classList.remove("active"), s.classList.remove("active"), a.classList.remove("active"), c.classList.add("active"), i.scrollIntoView({
	        block: "center",
	        behavior: "smooth"
	      })) : l.target == s ? (e.classList.remove("active"), t.classList.remove("active"), c.classList.remove("active"), a.classList.remove("active"), s.classList.add("active"), r.scrollIntoView({
	        block: "center",
	        behavior: "smooth"
	      })) : l.target == a && (e.classList.remove("active"), t.classList.remove("active"), c.classList.remove("active"), s.classList.remove("active"), a.classList.add("active"), m.scrollIntoView({
	        block: "center",
	        behavior: "smooth"
	      }));
	    });
	  })();

	  (() => {
	    const e = document.getElementById("arrow"),
	          t = document.getElementById("arrow-dir"),
	          c = document.getElementById("description");
	    document.addEventListener("click", s => {
	      s.target != e && s.target != t || c.scrollIntoView({
	        block: "center",
	        behavior: "smooth"
	      });
	    });
	  })();
	}();

}());

//# sourceMappingURL=data:application/json;charset=utf8;base64,
